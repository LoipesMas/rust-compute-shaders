#version 440 
layout(local_size_x = 8, local_size_y = 8) in;

struct TexCellData{
    float color;
};

uniform ivec2 u_field_size;
uniform float u_dt;

layout(shared, binding = 0) writeonly buffer OutputData
{
    TexCellData out_data[];
};

layout(shared, binding = 2) readonly buffer InputData
{
    TexCellData in_data[];
};

int GetArrayId(ivec2 pos)
{
    return pos.x + pos.y * int(u_field_size.x);
}

void main() {
	ivec2 pixel_coord = ivec2(gl_GlobalInvocationID.xy);

	float sum = 0.0;
	float count = 0.0;
	for (int i = -1; i <= 1; i++) {
		if (i + pixel_coord.x < 0 || i + pixel_coord.x >= u_field_size.x)
			continue;
		for (int j = -1; j <= 1; j++){
			if (j + pixel_coord.y < 0 || j + pixel_coord.y >= u_field_size.y)
				continue;
			TexCellData cell = in_data[GetArrayId(pixel_coord + ivec2(i,j))];
			count += 1.0;
			sum += cell.color;
			if (i==0 && j==0){
				count += 1.0;
				sum += cell.color;
			}
		}
	}
    TexCellData self;
	self.color = sum / 10.0;
	self.color -= 0.2 * u_dt;
	self.color = max(0.0, self.color);

    out_data[GetArrayId(pixel_coord)] = self;
}
